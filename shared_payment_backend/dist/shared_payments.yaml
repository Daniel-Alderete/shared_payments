openapi: 3.0.0
info:
  title: Shared Payments Specification
  version: 1.0.0
  contact:
    name: API Support
    email: daniel.alderetecillero@gmail.com
servers:
  - url: 'http://localhost:8080/api/1.0.0'
    description: Localhost (dev) server
tags:
  - name: Groups
    description: Endpoints related to groups functionality
  - name: Friends
    description: Endpoints related to friends functionality
  - name: Payments
    description: Endpoints related to payments functionality
paths:
  /groups:
    get:
      tags:
        - Groups
      summary: Gets all groups found in DB
      operationId: getAllGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Groups
      summary: Creates a new group in the DB
      operationId: createGroup
      requestBody:
        $ref: '#/components/requestBodies/GroupCreation'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /groups/{groupId}:
    get:
      tags:
        - Groups
      summary: Gets a group found in DB
      operationId: getGroup
      parameters:
        - $ref: '#/components/parameters/GroupId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
    put:
      tags:
        - Groups
      summary: Updates a group found in DB
      operationId: updateGroup
      parameters:
        - $ref: '#/components/parameters/GroupId'
      requestBody:
        $ref: '#/components/requestBodies/GroupUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
    delete:
      tags:
        - Groups
      summary: Deletes a group found in DB
      operationId: deleteGroup
      parameters:
        - $ref: '#/components/parameters/GroupId'
      responses:
        '204':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
  /groups/{groupId}/info:
    get:
      tags:
        - Groups
      summary: Gets a group of friends debts info
      operationId: getGroupInfo
      parameters:
        - $ref: '#/components/parameters/GroupId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInfoResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
  /groups/{groupId}/friends:
    get:
      tags:
        - Friends
      summary: Gets all friends found in DB for a group
      operationId: getAllFriends
      parameters:
        - $ref: '#/components/parameters/GroupId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
    post:
      tags:
        - Friends
      summary: Creates a new friend in the DB for a group
      operationId: createFriend
      parameters:
        - $ref: '#/components/parameters/GroupId'
      requestBody:
        $ref: '#/components/requestBodies/FriendCreation'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
  /groups/{groupId}/friends/{friendId}:
    get:
      tags:
        - Friends
      summary: Gets a friend found in DB for a group
      operationId: getFriend
      parameters:
        - $ref: '#/components/parameters/GroupId'
        - $ref: '#/components/parameters/FriendId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
    put:
      tags:
        - Friends
      summary: Updates a friend found in DB
      operationId: updateFriend
      parameters:
        - $ref: '#/components/parameters/GroupId'
        - $ref: '#/components/parameters/FriendId'
      requestBody:
        $ref: '#/components/requestBodies/FriendUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
    delete:
      tags:
        - Friends
      summary: Deletes a friend found in DB
      operationId: deleteFriend
      parameters:
        - $ref: '#/components/parameters/GroupId'
        - $ref: '#/components/parameters/FriendId'
      responses:
        '204':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
  /groups/{groupId}/friends/{friendId}/payments:
    get:
      tags:
        - Payments
      summary: Gets all payments found in DB for a group and a friend
      operationId: getAllPayments
      parameters:
        - $ref: '#/components/parameters/GroupId'
        - $ref: '#/components/parameters/FriendId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
    post:
      tags:
        - Payments
      summary: Creates a new payment in the DB for a group and a friend
      operationId: createPayment
      parameters:
        - $ref: '#/components/parameters/GroupId'
        - $ref: '#/components/parameters/FriendId'
      requestBody:
        $ref: '#/components/requestBodies/PaymentCreation'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
  /groups/{groupId}/friends/{friendId}/payments/{paymentId}:
    get:
      tags:
        - Payments
      summary: Gets a payment found in DB for a group and a friend
      operationId: getPayment
      parameters:
        - $ref: '#/components/parameters/GroupId'
        - $ref: '#/components/parameters/FriendId'
        - $ref: '#/components/parameters/PaymentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
    put:
      tags:
        - Payments
      summary: Updates a payment found in DB
      operationId: updatePayment
      parameters:
        - $ref: '#/components/parameters/GroupId'
        - $ref: '#/components/parameters/FriendId'
        - $ref: '#/components/parameters/PaymentId'
      requestBody:
        $ref: '#/components/requestBodies/PaymentUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
    delete:
      tags:
        - Payments
      summary: Deletes a payment found in DB
      operationId: deletePayment
      parameters:
        - $ref: '#/components/parameters/GroupId'
        - $ref: '#/components/parameters/FriendId'
        - $ref: '#/components/parameters/PaymentId'
      responses:
        '204':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal server error
components:
  parameters:
    GroupId:
      in: path
      name: groupId
      required: true
      description: Identifier of a group
      schema:
        type: string
    FriendId:
      in: path
      name: friendId
      required: true
      description: Identifier of a friend
      schema:
        type: string
    PaymentId:
      in: path
      name: paymentId
      required: true
      description: Identifier of a payment
      schema:
        type: string
  responses:
    ThirdPartyError:
      description: >
        'Used to provide more information about an http status code error; i.e.
        a 404 produced by a friend or a payment not found'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MoreThanOneErrorResponse'
  requestBodies:
    PaymentCreation:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/PaymentUpdate'
              - required:
                  - amount
                  - description
                  - date
      description: Contains the data required for creating a payment
      required: true
    PaymentUpdate:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/PaymentUpdate'
              - required:
                  - amount
                  - description
                  - date
      description: Contains the data required for updating a payment
    FriendCreation:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/FriendUpdate'
              - required:
                  - name
                  - surname
                  - payments
      description: Contains the data required for creating a friend
      required: true
    FriendUpdate:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/FriendUpdate'
              - required:
                  - name
                  - surname
                  - payments
      description: Contains the data required for updating a friend
    GroupCreation:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/GroupUpdate'
              - required:
                  - name
                  - description
                  - friends
      description: Contains the data required for creating a group
      required: true
    GroupUpdate:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/GroupUpdate'
              - required:
                  - name
                  - description
                  - friends
      description: Contains the data required for updating a group
  schemas:
    ApiResponseSuccessful:
      type: object
      required:
        - data
        - error
      properties:
        error:
          type: object
          description: 'As the request was processed successfully, this field will be null'
          example: null
    ApiResponseUnsuccessful:
      type: object
      required:
        - data
        - error
      properties:
        data:
          type: object
          description: >-
            As the request could not be processed successfully, this field will be null
          example: null
    MoreThanOneErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponseUnsuccessful'
        - type: object
          properties:
            error:
              $ref: '#/components/schemas/MoreThanOneError'
    MoreThanOneError:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: xxx
        message:
          type: string
    PaymentsResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponseSuccessful'
        - type: object
          properties:
            data:
              type: object
              properties:
                payments:
                  type: array
                  items:
                    $ref: '#/components/schemas/Payment'
    PaymentResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponseSuccessful'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Payment'
    FriendsResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponseSuccessful'
        - type: object
          properties:
            data:
              type: object
              properties:
                friends:
                  type: array
                  items:
                    $ref: '#/components/schemas/Friend'
    FriendResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponseSuccessful'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Friend'
    GroupsResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponseSuccessful'
        - type: object
          properties:
            data:
              type: object
              properties:
                groups:
                  type: array
                  items:
                    $ref: '#/components/schemas/Group'
    GroupResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponseSuccessful'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Group'
    GroupInfoResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponseSuccessful'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/GroupInfo'
    Payment:
      type: object
      properties:
        id:
          $ref: '#/components/parameters/PaymentId'
        amount:
          type: number
        description:
          type: string
        date:
          type: integer
          description: an unix seconds epoch representation of a date, in UTC time
    PaymentUpdate:
      type: object
      properties:
        amount:
          type: number
        description:
          type: string
        date:
          type: integer
          description: an unix seconds epoch representation of a date, in UTC time
    Friend:
      type: object
      properties:
        id:
          $ref: '#/components/parameters/FriendId'
        name:
          type: string
        surname:
          type: string
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    FriendUpdate:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        payments:
          type: array
          items:
            description: list of payment ids
            type: string
    Group:
      type: object
      properties:
        id:
          $ref: '#/components/parameters/GroupId'
        name:
          type: string
        description:
          type: string
        friends:
          type: array
          items:
            $ref: '#/components/schemas/Friend'
    GroupUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        friends:
          type: array
          items:
            description: list of friend ids
            type: string
    GroupInfo:
      type: object
      properties:
        debts:
          type: array
          items:
            $ref: '#/components/schemas/Debt'
        minimunPayments:
          type: array
          items:
            $ref: '#/components/schemas/MinimunPayments'
    Debt:
      type: object
      description: total amount of money a friend owes
      properties:
        friendId:
          $ref: '#/components/parameters/FriendId'
        friendName:
          type: string
        friendSurname:
          type: string
        amount:
          type: number
    MinimunPayments:
      type: object
      description: list of friends and the quantities owed for a friend
      properties:
        friendId:
          $ref: '#/components/parameters/FriendId'
        friendName:
          type: string
        friendSurname:
          type: string
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Debt'
        
    
  